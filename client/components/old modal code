   {/* Recommend Resource Modal */}
          <Form>
            <Modal
              show={this.state.recommendShow}
              onHide={this.handleRecommendClose}
            >
              <Modal.Header closeButton>
                <Modal.Title>Recommend Resource</Modal.Title>
              </Modal.Header>
              <Modal.Body>
                <Form.Group>
                  {/* Title */}
                  <Form.Label>Title</Form.Label>
                  <Form.Control
                    name="title"
                    type="title"
                    placeholder="Enter title"
                    onChange={this.handleRecommendChange}
                  />
                  <Form.Label>Link</Form.Label>
                  <Form.Control
                    name="link"
                    type="link"
                    placeholder="Enter link"
                    onChange={this.handleRecommendChange}
                  />
                  <Form.Label>Description</Form.Label>
                  <Form.Control
                    name="description"
                    type="description"
                    as="textarea"
                    rows="3"
                    placeholder="Enter description"
                    onChange={this.handleRecommendChange}
                  />
                  <Form.Label>Type</Form.Label>
                  <Form.Control
                    as="select"
                    name="type"
                    onChange={this.handleRecommendChange}
                  >
                    {options.map(option => {
                      return <option key={option}>{option}</option>
                    })}
                  </Form.Control>
                </Form.Group>
              </Modal.Body>
              <Modal.Footer>
                <React.Fragment>
                  <Button variant="submit" onClick={this.handleRecommendClose}>
                    Close
                  </Button>
                  <Button variant="submit" onClick={this.handleRecommendSubmit}>
                    Submit
                  </Button>
                </React.Fragment>
              </Modal.Footer>
            </Modal>
          </Form>
          {/* End Recommend Resource Modal */}



          {/* Add Resource Modal  */}
          <Form>
            <Modal
              show={this.state.resourceShow}
              onHide={this.handleResourceClose}
            >
              <Modal.Header closeButton>
                <Modal.Title>Add Resource</Modal.Title>
              </Modal.Header>
              <Modal.Body>
                <Form.Group>
                  {/* Title */}
                  <Form.Label>Title</Form.Label>
                  <Form.Control
                    name="title"
                    type="title"
                    placeholder="Enter title"
                    onChange={this.handleResourceChange}
                  />
                  <Form.Label>Link</Form.Label>
                  <Form.Control
                    name="link"
                    type="link"
                    placeholder="Enter link"
                    onChange={this.handleResourceChange}
                  />
                  <Form.Label>Description</Form.Label>
                  <Form.Control
                    name="description"
                    type="description"
                    as="textarea"
                    rows="3"
                    placeholder="Enter description"
                    onChange={this.handleResourceChange}
                  />
                  <Form.Label>Type</Form.Label>
                  <Form.Control
                    as="select"
                    name="type"
                    onChange={this.handleEditChange}
                  >
                    {options.map(option => {
                      return <option key={option}>{option}</option>
                    })}
                  </Form.Control>
                </Form.Group>
              </Modal.Body>
              <Modal.Footer>
                {(this.props.trees[0] &&
                  this.props.trees[0].ownerId &&
                  this.props.user.id === this.props.trees[0].ownerId) ||
                auth === true ? (
                  <React.Fragment>
                    <Button variant="submit" onClick={this.handleResourceClose}>
                      Close
                    </Button>
                    <Button
                      variant="submit"
                      onClick={this.handleResourceSubmit}
                    >
                      Submit
                    </Button>
                  </React.Fragment>
                ) : (
                  ''
                )}
              </Modal.Footer>
            </Modal>
          </Form>

          {/* End Add Resource Modal */}


   {/* <Button onClick={this.onUndo}>Undo last action</Button>
                <br />
                <br /> */}
                {/* <Button
                  onClick={() => {
                    const selectedNode = document.getElementById(
                      `node-${this.state.selected.id}`
                    )
                    selectedNode.dispatchEvent(
                      new KeyboardEvent('keydown', {key: 'Shift'})
                    )
                    console.log('keyboard fire')
                  }}
                >
                  Create Association
                </Button> */}



BIG REWRITE BELOW


          {/* Node Resource Modal */}
          <Modal show={this.state.show} onHide={this.handleClose}>
            <Modal.Header closeButton>
              <Modal.Title>{this.state.selected.title}</Modal.Title>
            </Modal.Header>
            <Modal.Body>
              <strong>Description:</strong>
              {this.props.nodes &&
              this.state.selected.id !== undefined &&
              this.state.selected.description !== undefined
                ? this.props.nodes.find(node => {
                    return node.id === this.state.selected.id
                  }).description
                : ''}
            </Modal.Body>
            <Modal.Body>
              <strong>Resources:</strong>
              {/* <ul> */}
              {this.props.resources &&
              this.props.resources[0] &&
              this.props.resources[0].id !== undefined
                ? this.props.resources.map(resource => {
                    //<ConnectedResourceModalItem>
                    return (
                      <li key={resource.id} style={{listStyleType: 'none'}}>
                        <Row>
                          <Col xs={4}>
                            <Row>
                              <Button variant="submit" sz="sm">
                                +
                              </Button>
                              <Button
                                variant="submit"
                                sz="sm"
                                onClick={() => console.log('upvote')}
                              >
                                {resource.score} pts.
                              </Button>
                              <Button variant="submit" sz="sm">
                                -
                              </Button>
                            </Row>
                          </Col>
                          <Col xs={8}>
                            <Link to={`/resource/${resource.id}`}>
                              {resource.title}
                            </Link>{' '}
                            ({resource.type})
                            <Button
                              variant="submit"
                              size="sm"
                              onClick={async () => {
                                await this.props.unAssociateResourceFromNode({
                                  node: this.state.selected,
                                  resource: resource
                                })
                                await this.props.getResourcesByNode(
                                  this.state.selected
                                )
                              }}
                            >
                              Remove
                            </Button>
                          </Col>
                        </Row>
                      </li>
                    )
                  })
                : ''}
              {/* </ul> */}
            </Modal.Body>
            <Modal.Body>
              <strong>Resources Recommended by other Users:</strong>
              <ul>
                {this.props.recommendations &&
                this.props.recommendations[0] &&
                this.props.recommendations[0].id !== undefined
                  ? this.props.recommendations
                      // .filter(recommendation => {
                      //   return (
                      //     recommendation.nodeId === this.state.selected.id ||
                      //     recommendation.nodeId === null
                      //   )
                      // })
                      .map(recommendation => {
                        return (
                          <li key={recommendation.id}>
                            <Link to={`/recommendation/${recommendation.id}`}>
                              {recommendation.title}
                            </Link>{' '}
                            ({recommendation.type})
                          </li>
                        )
                      })
                  : ''}
              </ul>
            </Modal.Body>
            {/* RENDERS NODE RESOURCE CONTROLS */}
            <Modal.Footer>
              {(this.props.trees[0] &&
                this.props.trees[0].ownerId &&
                this.props.user.id === this.props.trees[0].ownerId) ||
              auth === true ? (
                <React.Fragment>
                  <Button variant="submit" onClick={this.handleClose}>
                    Close
                  </Button>

                  <Button variant="submit" onClick={this.handleEditShow}>
                    Edit
                  </Button>
                  <Button
                    variant="submit"
                    onClick={this.handleResourceSearchShow}
                  >
                    Add Resource
                  </Button>
                  <Button
                    variant="submit"
                    onClick={this.handleExistingSearchShow}
                  >
                    Search Resources
                  </Button>
                </React.Fragment>
              ) : this.props.user.id !== undefined ? (
                <Button variant="submit" onClick={this.handleRecommendShow}>
                  Recommend Resource
                </Button>
              ) : (
                ''
              )}
              {/* END RENDERS NODE RESOURCE CONTROLS */}
            </Modal.Footer>
          </Modal>
          {/* End Resource Modal */}

          {/* Node Edit Modal */}
          <Form>
            <Modal show={this.state.editShow} onHide={this.handleEditClose}>
              <Modal.Header closeButton>
                <Modal.Title>Edit Node</Modal.Title>
              </Modal.Header>
              <Modal.Body>
                <Form.Group>
                  {/* Title */}
                  <Form.Label>Title</Form.Label>
                  <Form.Control
                    name="title"
                    type="title"
                    placeholder="Enter title"
                    onChange={this.handleEditChange}
                  />
                  <Form.Label>Description</Form.Label>
                  <Form.Control
                    name="description"
                    type="description"
                    placeholder="Enter description"
                    onChange={this.handleEditChange}
                  />
                </Form.Group>
              </Modal.Body>
              <Modal.Footer>
                <Button variant="submit" onClick={this.handleEditClose}>
                  Close
                </Button>
                <Button variant="submit" onClick={this.handleEditSubmit}>
                  Submit
                </Button>
              </Modal.Footer>
            </Modal>
          </Form>

          {/* Check if Resource Exists */}
          <Form>
            <Modal
              show={this.state.resourceSearchShow}
              onHide={this.handleResourceSearchShow}
            >
              <Modal.Header closeButton>
                <Modal.Title>Search Resource</Modal.Title>
              </Modal.Header>
              <React.Fragment>
                <Modal.Body>
                  {' '}
                  <Form.Group>
                    <Form.Label>
                      <strong>Link</strong>
                    </Form.Label>
                    <Form.Control
                      name="link"
                      type="link"
                      placeholder="Enter link"
                      onChange={this.handleResourceSearchChange}
                    />
                    <Form.Text>
                      Enter the URL for the resource you want to add. If it does
                      not already exist in our database you will have the
                      opportunity to add it.
                    </Form.Text>
                  </Form.Group>
                  {/* <ul> */}
                  {this.state.searchResults.length > 0 ? (
                    this.state.searchResults.map(result => {
                      return (
                        <li key={result.id}>
                          {this.state.selected.id !== result.nodeId ? (
                            <React.Fragment>
                              <Link to={`/resource/${result.id}`}>
                                {result.title}{' '}
                              </Link>
                              <Button
                                size="sm"
                                variant="submit"
                                onClick={this.handleResourceSubmit}
                              >
                                Add to Node
                              </Button>
                            </React.Fragment>
                          ) : (
                            <React.Fragment>
                              <Link to={`/resource/${result.id}`}>
                                {result.title}{' '}
                              </Link>
                              <Button
                                size="sm"
                                variant="submit"
                                onClick={async () => {
                                  await this.props.unAssociateResourceFromNode({
                                    node: this.state.selected,
                                    resource: result
                                  })
                                  await this.props.getResourcesByNode(
                                    this.state.selected
                                  )
                                }}
                              >
                                Remove from Node
                              </Button>
                            </React.Fragment>
                          )}
                        </li>
                      )
                    })
                  ) : this.state.searchResults.length === 0 &&
                  this.state.search === true ? (
                    <React.Fragment>
                      None found. Would you like to add it to the database?
                      {/* <Form.Group> */}
                      {/* Title */}
                      <Form.Label>Title</Form.Label>
                      <Form.Control
                        name="title"
                        type="title"
                        placeholder="Enter title"
                        onChange={this.handleResourceChange}
                      />
                      <Form.Label>Description</Form.Label>
                      <Form.Control
                        name="description"
                        type="description"
                        as="textarea"
                        rows="3"
                        placeholder="Enter description"
                        onChange={this.handleResourceChange}
                      />
                      <Form.Label>Type</Form.Label>
                      <Form.Control
                        as="select"
                        name="type"
                        onChange={this.handleEditChange}
                      >
                        {options.map(option => {
                          return <option key={option}>{option}</option>
                        })}
                      </Form.Control>
                      <Form.Label>Tags</Form.Label>
                      <Form.Control
                        name="tags"
                        type="tags"
                        placeholder="Enter tags"
                        onChange={this.handleResourceChange}
                      />
                      {/* </Form.Group> */}
                    </React.Fragment>
                  ) : this.state.searchResults.length === 0 &&
                  this.state.search === true &&
                  this.state.recommend === true ? (
                    <React.Fragment>
                      <Form.Label>Title</Form.Label>
                      <Form.Control
                        name="title"
                        type="title"
                        placeholder="Enter title"
                        onChange={this.handleRecommendChange}
                      />
                      <Form.Label>Link</Form.Label>
                      <Form.Control
                        name="link"
                        type="link"
                        placeholder="Enter link"
                        onChange={this.handleRecommendChange}
                      />
                      <Form.Label>Description</Form.Label>
                      <Form.Control
                        name="description"
                        type="description"
                        as="textarea"
                        rows="3"
                        placeholder="Enter description"
                        onChange={this.handleRecommendChange}
                      />
                      <Form.Label>Type</Form.Label>
                      <Form.Control
                        as="select"
                        name="type"
                        onChange={this.handleRecommendChange}
                      >
                        {options.map(option => {
                          return <option key={option}>{option}</option>
                        })}
                      </Form.Control>
                    </React.Fragment>
                  ) : null}
                  {/* </ul> */}
                </Modal.Body>
                <Modal.Footer>
                  {this.state.search === true &&
                  this.state.recommend === false &&
                  this.state.searchResults.length === 0 ? (
                    <React.Fragment>
                      <Button
                        variant="submit"
                        onClick={this.handleResourceSearchShow}
                      >
                        Close
                      </Button>
                      <Button
                        variant="submit"
                        onClick={this.handleResourceSubmit}
                      >
                        Submit
                      </Button>
                    </React.Fragment>
                  ) : this.state.search === true &&
                  this.state.recommend === true &&
                  this.state.searchResults.length === 0 ? (
                    <React.Fragment>
                      <Button
                        variant="submit"
                        onClick={this.handleResourceSearchShow}
                      >
                        Close
                      </Button>
                      <Button
                        variant="submit"
                        onClick={this.handleRecommendSubmit}
                      >
                        Submit
                      </Button>
                    </React.Fragment>
                  ) : (
                    <React.Fragment>
                      <Button
                        variant="submit"
                        onClick={this.handleResourceShow}
                      >
                        Close
                      </Button>
                      <Button
                        variant="submit"
                        onClick={this.handleResourceSearchSubmit}
                      >
                        Submit
                      </Button>
                    </React.Fragment>
                  )}
                </Modal.Footer>
              </React.Fragment>
            </Modal>
          </Form>

          {/* Search Existing Resource Modal */}
          <Form>
            <Modal
              show={this.state.searchExistingResource}
              onHide={this.handleExistingSearchShow}
            >
              <Modal.Header closeButton>
                <Modal.Title>Search</Modal.Title>
              </Modal.Header>
              <Modal.Body>
                <Form.Group>
                  {/* Title */}
                  <Form.Label>Search</Form.Label>
                  <Form.Control
                    name="searchExisting"
                    placeholder="Search for a Resource"
                    onChange={this.handleExistingSearchChange}
                  />
                </Form.Group>
              </Modal.Body>
              {this.state.searchExistingResourceResults.length >= 0 ? (
                <Modal.Body>
                  Search Results
                  {this.state.searchExistingResourceResults.length > 0 &&
                  this.state.searchExistingResourceSearch === true ? (
                    this.state.searchExistingResourceResults.map(result => {
                      return (
                        <React.Fragment key={result.link}>
                          <li>
                            <Link to={`/resource/${result.id}`}>
                              {result.title}
                            </Link>

                            <Button
                              variant="submit"
                              sz="sm"
                              onClick={async () => {
                                await this.props.associateResourceToNode({
                                  node: this.state.selected,
                                  resource: result
                                })
                                await this.props.getResourcesByNode(
                                  this.state.selected
                                )
                              }}
                            >
                              Add to Node
                            </Button>
                          </li>
                        </React.Fragment>
                      )
                    })
                  ) : this.state.searchExistingResourceSearch === true &&
                  this.state.searchExistingResourceResults.length === 0 ? (
                    <Row>
                      <Col>none found</Col>
                    </Row>
                  ) : null}
                </Modal.Body>
              ) : null}

              <Modal.Footer>
                <React.Fragment>
                  <Button
                    variant="submit"
                    onClick={this.handleExistingSearchShow}
                  >
                    Close
                  </Button>
                  <Button
                    variant="submit"
                    onClick={this.handleExistingSearchSubmit}
                  >
                    Submit
                  </Button>
                </React.Fragment>
              </Modal.Footer>
            </Modal>
          </Form>
          {/* End Edge Label Modal */}
